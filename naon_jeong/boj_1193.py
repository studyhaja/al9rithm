'''
백준 온라인 저지 - 분수찾기

https://www.acmicpc.net/problem/1193

무한히 큰 배열에 다음과 같이 분수들이 적혀있다.

1/1	1/2	1/3	1/4	1/5	...
2/1	2/2	2/3	2/4 ...	...
3/1	3/2	3/3	...	...	...
4/1	4/2	...	...	...	...
5/1	...	...	...	...	...
...	...	...	...	...	...

이와 같이 나열된 분수들을 1/1 -> 1/2 -> 2/1 -> 3/1 -> 2/2 -> … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.

X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.
'''


'''
분자, 분모로 나눠서 수열을 만들고 규칙을 찾았다.
먼저 분자는 1 1 2 3 2 1 1 2 3 4 5 4 3 2 1 1 ... 로 전개되니
1, 3, 5, ... 를 중심으로 1씩 증가했다가 정점에서 다시 1씩 감소하는 수열로,
n이 2 이상인 정수일 때의 일반항(Fn = 2n^2 - n - 1)까지 구했다가
아무리 생각해도 이렇게 푸는 건 아닌 것 같아서 다른 사람 풀이를 참고했다.

배열을 대각선으로 자르면 규칙을 발견할 수 있다.
같은 대각선 안에서는 분자 + 분모 합이 일정하며, n번째 대각선에 속하는 분수의 분자 + 분모 합은 n+1이다.
홀수 번째 대각선은 우상향으로 전개되어 분자는 1씩 감소하여 1로 끝나고, 분모는 1로 시작해 1씩 증가한다.
짝수 번째 대각선은 좌하향으로 전개되며 분자, 분모가 홀수 번째 대각선과 반대로 증감한다.

따라서,
1. 주어진 N번째 분수가 몇 번째 대각선에 있는지 찾는다. (line_n)
2. N번째 분수가 대각선 내에서 몇 번째인지 찾는다. (nth)
2. 분자 + 분모 값을 구한다. (sum_num_denom = line_n + 1)
3. line_n이 홀수라면
    3-1. 분수가 우상향으로 전개되므로
    3-2. 분자는 분자 + 분모 값에서부터 nth를 뺀 값이 되고 (sum_num_denom - nth)
    3-3. 분모는 nth가 된다. (nth)
4. line_n이 짝수라면
    4-1. 분수가 좌하향으로 전개되므로
    4-2. 분자는 nth가 되고
    4-3. 분모는 분자 + 분모 값에서부터 nth를 뺀 값이 된다.
    
이것을 처음에는 2292번 풀이와 마찬가지로 일반항을 구하고 근의 공식을 쓰고 어쩌고...로 풀어서 통과는 했는데
같은 방법만 사용하긴 싫어서 다른 풀이를 참고해서 다시 풀었다.
'''


import math

N = int(input())
a = 1
b = 1
c = -2 * N

line_n = max(((-b + math.sqrt(b**2 - 4 * a * c)) / (2 * a)), ((-b - math.sqrt(b**2 - 4 * a * c)) / (2 * a)))
line_n = math.ceil(line_n)

sum_num_denom = line_n + 1
nth = N - ((line_n - 1) * line_n) // 2

if line_n % 2 == 0:
    numerator = str(nth)
    denominator = str(sum_num_denom - nth)

else:
    numerator = str(sum_num_denom - nth)
    denominator = str(nth)

print(f'{numerator}/{denominator}')


'''
첫 번째 풀이와 실행시간은 같고 메모리는 적은 풀이법이다.

각 대각선에 속한 분수 수는 1 3 6 10 15 ... 로 전개되는데,
1부터 시작해 1씩 증가한 수를 직전 값에 더해주는 수열이다. (점화식: Fn = Fn-1 + n)
 
N번째 분수가 몇 번째 대각선의 몇 번째 위치에 있는지 알아내기 위해
1부터 시작해 1씩 더하면서 N에서 제했다. 그리고 제하는 횟수만큼 line_n에 더한다.
N값이 line_n보다 작을 때까지 이 작업을 반복하면
line_n 값은 몇 번째 대각선인지, N은 대각선 내부에서 몇 번째 분수인지 가리키는 수가 된다.
'''


N = int(input())
line_n = 1

while N > line_n:
    N -= line_n
    line_n += 1

sum_num_denom = line_n + 1
nth = N

if line_n % 2 == 0:
    numerator = str(N)
    denominator = str(sum_num_denom - N)
else:
    numerator = str(sum_num_denom - N)
    denominator = str(N)

print(f'{numerator}/{denominator}')
